[{"E:\\Codingdata\\React\\project\\react-admin-client\\src\\index.js":"1","E:\\Codingdata\\React\\project\\react-admin-client\\src\\App.js":"2","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\login\\index.jsx":"3","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\admin\\index.jsx":"4","E:\\Codingdata\\React\\project\\react-admin-client\\src\\api\\index.js":"5","E:\\Codingdata\\React\\project\\react-admin-client\\src\\api\\ajax.js":"6","E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\memoryUtils.js":"7","E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\storageUtils.js":"8","E:\\Codingdata\\React\\project\\react-admin-client\\src\\components\\left-nav\\index.jsx":"9","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\home\\index.jsx":"10","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\chart\\line.jsx":"11","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\chart\\bar.jsx":"12","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\chart\\pie.jsx":"13","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\category\\index.jsx":"14","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\index.jsx":"15","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\role\\index.jsx":"16","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\user\\index.jsx":"17","E:\\Codingdata\\React\\project\\react-admin-client\\src\\config\\menuConfig.js":"18","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\order\\index.jsx":"19","E:\\Codingdata\\React\\project\\react-admin-client\\src\\components\\header\\index.jsx":"20","E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\dateUtils.js":"21","E:\\Codingdata\\React\\project\\react-admin-client\\src\\components\\link-button\\index.jsx":"22","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\category\\add-form.jsx":"23","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\category\\update-form.jsx":"24","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\add-update.jsx":"25","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\detail.jsx":"26","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\home.jsx":"27","E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\constants.js":"28","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx":"29","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx":"30","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\role\\add-form.jsx":"31","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\role\\auth-form.jsx":"32","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\user\\user-form.jsx":"33"},{"size":306,"mtime":1610934752054,"results":"34","hashOfConfig":"35"},{"size":521,"mtime":1610693792205,"results":"36","hashOfConfig":"35"},{"size":3764,"mtime":1610693792340,"results":"37","hashOfConfig":"35"},{"size":1783,"mtime":1610693792267,"results":"38","hashOfConfig":"35"},{"size":3051,"mtime":1610693792218,"results":"39","hashOfConfig":"35"},{"size":527,"mtime":1610693792217,"results":"40","hashOfConfig":"35"},{"size":32,"mtime":1610693792389,"results":"41","hashOfConfig":"35"},{"size":305,"mtime":1610693792391,"results":"42","hashOfConfig":"35"},{"size":2392,"mtime":1610693792248,"results":"43","hashOfConfig":"35"},{"size":237,"mtime":1610693792313,"results":"44","hashOfConfig":"35"},{"size":175,"mtime":1610693792312,"results":"45","hashOfConfig":"35"},{"size":173,"mtime":1610693792311,"results":"46","hashOfConfig":"35"},{"size":173,"mtime":1610693792312,"results":"47","hashOfConfig":"35"},{"size":6733,"mtime":1610693792293,"results":"48","hashOfConfig":"35"},{"size":593,"mtime":1610693792377,"results":"49","hashOfConfig":"35"},{"size":4723,"mtime":1610693792383,"results":"50","hashOfConfig":"35"},{"size":3829,"mtime":1610693792384,"results":"51","hashOfConfig":"35"},{"size":1323,"mtime":1610693792264,"results":"52","hashOfConfig":"35"},{"size":183,"mtime":1610693792342,"results":"53","hashOfConfig":"35"},{"size":2870,"mtime":1610934752053,"results":"54","hashOfConfig":"35"},{"size":342,"mtime":1610693792388,"results":"55","hashOfConfig":"35"},{"size":194,"mtime":1610693792259,"results":"56","hashOfConfig":"35"},{"size":1550,"mtime":1610693792292,"results":"57","hashOfConfig":"35"},{"size":1032,"mtime":1610693792295,"results":"58","hashOfConfig":"35"},{"size":6875,"mtime":1610693792344,"results":"59","hashOfConfig":"35"},{"size":3266,"mtime":1610693792370,"results":"60","hashOfConfig":"35"},{"size":4237,"mtime":1610693792376,"results":"61","hashOfConfig":"35"},{"size":187,"mtime":1610693792387,"results":"62","hashOfConfig":"35"},{"size":2643,"mtime":1610693792380,"results":"63","hashOfConfig":"35"},{"size":4082,"mtime":1610693792379,"results":"64","hashOfConfig":"35"},{"size":914,"mtime":1610693792381,"results":"65","hashOfConfig":"35"},{"size":1843,"mtime":1610693792382,"results":"66","hashOfConfig":"35"},{"size":1935,"mtime":1610693792386,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1634l6y",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},"E:\\Codingdata\\React\\project\\react-admin-client\\src\\index.js",[],["142","143"],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\App.js",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\login\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\admin\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\api\\index.js",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\api\\ajax.js",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\memoryUtils.js",["144"],"export default {\r\n    user:{}\r\n}","E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\storageUtils.js",["145"],"\r\n\r\nconst USER_KEY='user_key'\r\n\r\nexport default{\r\n    saveUser(user){\r\n        localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n    },\r\n\r\n    getUser(){\r\n        return  JSON.parse(localStorage.getItem(USER_KEY)||'{}') \r\n    },\r\n\r\n    deleteUser(){\r\n        localStorage.removeItem(USER_KEY)\r\n    }\r\n}","E:\\Codingdata\\React\\project\\react-admin-client\\src\\components\\left-nav\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\home\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\chart\\line.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\chart\\bar.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\chart\\pie.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\category\\index.jsx",["146"],"import React, { Component } from \"react\";\r\nimport { Card, Table, message, Button, Icon ,Modal} from \"antd\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\nimport {\r\n  reqCategory,\r\n  reqAddCategory,\r\n  reqUpdateCategory,\r\n  reqCategorys,\r\n} from \"../../api\";\r\nimport \"./index.less\";\r\n\r\nexport default class Category extends Component {\r\n  state = {\r\n    parentId: \"0\",\r\n    loading: false,\r\n    categorys: [],\r\n    showStatus: 0,\r\n    parentName:''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initColumns();\r\n    this.getCategories();\r\n  }\r\n    /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n   \r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"分类的名称\",\r\n        dataIndex: \"name\", // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: 300,\r\n        render: (\r\n          category // 返回需要显示的界面标签\r\n        ) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n    /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n     \r\n      // 获取二级分类列表显示\r\n      this.getCategories()\r\n    })\r\n\r\n    \r\n  }\r\n\r\n\r\n  /*\r\n  显示添加的确认框\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1,\r\n    });\r\n  };\r\n\r\n   /*\r\n  添加分类\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 收集数据, 并提交添加分类的请求\r\n        const {parentId, categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if(result.status===0) {\r\n\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if(parentId===this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategories()\r\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n            this.getCategories('0')\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n    /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n    /*\r\n  更新分类\r\n   */\r\n  updateCategory = () => {\r\n \r\n    // 进行表单验证, 只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if(!err) {\r\n        // 1. 隐藏确定框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n\r\n        // 2. 发请求更新分类\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategories()\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  getCategories = async (parentId) => {\r\n    // 在发请求前, 显示loading\r\n    this.setState({ loading: true });\r\n    parentId = parentId || this.state.parentId;\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId);\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({ loading: false });\r\n    if (result.status === 0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys,\r\n        });\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys,\r\n        });\r\n      }\r\n    } else {\r\n      message.error(\"获取分类列表失败\");\r\n    }\r\n\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  render() {\r\n    const { categorys, parentId ,loading,showStatus,parentName,subCategorys} = this.state;\r\n     // 读取指定的分类\r\n     const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n    // card的左侧\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        \"一级分类列表\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n          <Icon type=\"arrow-right\" style={{ marginRight: 5 }} />\r\n          <span>{parentName}</span>\r\n        </span>\r\n      );\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        <Icon type=\"plus\" />\r\n        添加\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra} className=\"category\">\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          columns={this.columns}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          loading={loading}\r\n        />\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus === 1}\r\n          onCancel={this.handleCancel}\r\n          onOk={this.addCategory}\r\n        >\r\n          \r\n          <AddForm \r\n           categorys={categorys}\r\n           parentId={parentId}\r\n           setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\role\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\user\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\config\\menuConfig.js",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\order\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\components\\header\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\dateUtils.js",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\components\\link-button\\index.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\category\\add-form.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\category\\update-form.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\add-update.jsx",["147","148","149"],"import React, { Component } from \"react\";\r\nimport { Card, Icon, Form, Input, Cascader, Button, message } from \"antd\";\r\nimport RichTextEditor from \"./rich-text-editor\";\r\nimport { reqCategorys, reqAddOrUpdateProduct } from \"../../api\";\r\nimport PicturesWall from \"./pictures-wall\";\r\n\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n\r\nclass AddUpdate extends Component {\r\n  state = {\r\n    options: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n\r\n  componentWillMount() {\r\n    const {product} = this.props.location.state;\r\n    this.isUpdate = !!product;\r\n    this.product = product || {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategorys(\"0\");\r\n  }\r\n\r\n  getCategorys = async (parentId) => {\r\n\r\n    let result = await reqCategorys(parentId);\r\n    if (result.status === 0) {\r\n      if (parentId === \"0\") {\r\n        this.initOptions(result.data);\r\n      } else {\r\n        return result.data;\r\n      }\r\n    } else {\r\n      message.error(\"获取商品分类数据失败\");\r\n    }\r\n  };\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map((c) => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }));\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const { isUpdate, product } = this;\r\n  \r\n    const  {pCategoryId}  = product;\r\n\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId);\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(\r\n        (option) => option.value === pCategoryId\r\n      );\r\n     \r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions;\r\n\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options,\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    this.props.form.validateFields(async (error, values) => {\r\n      const { name, desc, price, categoryIds } = values;\r\n      const imgs = this.pw.current.getImgs();\r\n      const detail = this.editor.current.getDetail();\r\n      let pCategoryId, categoryId;\r\n      if (categoryIds.length === 1) {\r\n        pCategoryId = \"0\";\r\n        categoryId = categoryIds[0];\r\n      } else {\r\n        pCategoryId = categoryIds[0];\r\n        categoryId = categoryIds[1];\r\n      }\r\n      const product = {\r\n        name,\r\n        desc,\r\n        price,\r\n        imgs,\r\n        detail,\r\n        pCategoryId,\r\n        categoryId,\r\n      };\r\n\r\n       // 如果是更新, 需要添加_id\r\n       if(this.isUpdate) {\r\n        product._id = this.product._id\r\n      }\r\n\r\n      const result = await reqAddOrUpdateProduct(product);\r\n\r\n      // 3. 根据结果提示\r\n      if (result.status === 0) {\r\n        message.success(`${this.isUpdate ? \"更新\" : \"添加\"}商品成功!`);\r\n        this.props.history.goBack();\r\n      } else {\r\n        message.error(`${this.isUpdate ? \"更新\" : \"添加\"}商品失败!`);\r\n      }\r\n    });\r\n  };\r\n\r\n  validatePrice = (rule, value, callback) => {\r\n    if (value * 1 > 0) {\r\n      callback();\r\n    } else {\r\n      callback(\"价格必须大于0\");\r\n    }\r\n  };\r\n\r\n  loadData = async (selectedOptions) => {\r\n    const targetOption = selectedOptions[0];\r\n    targetOption.loading = true;\r\n    const subcategorys = await this.getCategorys(targetOption.value);\r\n    // 隐藏loading\r\n    targetOption.loading = false;\r\n    if (subcategorys && subcategorys.length > 0) {\r\n      const childOptions = subcategorys.map((item) => {\r\n        return {\r\n          value: item._id,\r\n          label: item.name,\r\n          isLeaf: true,\r\n        };\r\n      });\r\n      targetOption.children = childOptions;\r\n    } else {\r\n      targetOption.isLeaf = true;\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 }, // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    };\r\n    const { product, isUpdate } = this;\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const {pCategoryId, categoryId, imgs, detail} = product\r\n\r\n    const categoryIds = []\r\n    if(isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if(pCategoryId==='0') {\r\n        categoryIds.push(categoryId)\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n    return (\r\n      <Card>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {getFieldDecorator(\"name\", {\r\n              initialValue: product.name,\r\n              rules: [{ required: true, message: \"必须输入商品名称\" }],\r\n            })(<Input placeholder=\"请输入商品名称\" />)}\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {getFieldDecorator(\"desc\", {\r\n              initialValue: product.desc,\r\n              rules: [{ required: true, message: \"必须输入商品描述\" }],\r\n            })(<TextArea placeholder=\"请输入商品描述\" />)}\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n            {getFieldDecorator(\"price\", {\r\n              initialValue: product.price,\r\n              rules: [\r\n                { required: true, message: \"必须输入商品价格\" },\r\n                { validator: this.validatePrice },\r\n              ],\r\n            })(\r\n              <Input\r\n                type=\"number\"\r\n                placeholder=\"请输入商品价格\"\r\n                addonAfter=\"元\"\r\n              />\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {getFieldDecorator(\"categoryIds\", {\r\n              initialValue: categoryIds,\r\n              rules: [{ required: true, message: \"必须输入商品分类\" }],\r\n            })(\r\n              <Cascader options={this.state.options} loadData={this.loadData} />\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={product.imgs} />\r\n          </Item>\r\n          <Item\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 2 }}\r\n            wrapperCol={{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.editor} detail={product.detail} />\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" onClick={this.submit}>\r\n              提交\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddUpdate);\r\n","E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\detail.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\home.jsx",["150"],"import React, { Component } from \"react\";\r\nimport { Card, Table, Select,Input,Button,Icon, message } from \"antd\";\r\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from '../../api'\r\nimport {BASE_IMG_URL, PAGE_SIZE} from '../../utils/constants'\r\nimport LinkButton from '../../components/link-button'\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class ProductHome extends Component {\r\n  state = {\r\n    products: [\r\n      \r\n    ],\r\n    searchType:'productName',\r\n    searchName:'',\r\n    total:0\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getProducts(1)\r\n  }\r\n\r\n  getProducts=async (pageNum)=>{\r\n\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n\r\n    const {searchName,searchType}=this.state\r\n    let result\r\n    if(searchName){\r\n\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n\r\n    }else{\r\n      result = await reqProducts(pageNum,PAGE_SIZE)\r\n   \r\n    }\r\n\r\n    if(result.status===0){\r\n      const {list:products,total}=result.data\r\n      this.setState({\r\n        products,\r\n        total\r\n      })\r\n    }else{\r\n      message.error('查询商品失败')\r\n    }\r\n\r\n \r\n\r\n  }\r\n\r\n  /*\r\n  更新指定商品的状态\r\n   */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns =  this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status===1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status===1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status===1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.props.history.push('/product/detail', {product})}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.props.history.push('/product/addupdate', {product})}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  };\r\n\r\n  handleSearch=()=>{\r\n    this.getProducts(1)\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { products,searchName,searchType ,total} = this.state;\r\n    const columns = this.columns;\r\n\r\n    const title = (\r\n      <span className='header'>\r\n        <Select className=\"select\" value={searchType} onChange={value=>this.setState({searchType:value})}>\r\n          <Option key=\"productName\">商品名称</Option>\r\n          <Option key=\"productDesc\">商品描述</Option>\r\n        </Select>\r\n        <Input  className=\"input\" value={searchName} onChange={event=>{this.setState({searchName:event.target.value})}} />\r\n        <Button type='primary' onClick={this.handleSearch}>搜索</Button>\r\n      </span>\r\n    );\r\n\r\n    const extra = <Button type='primary' onClick={()=>this.props.history.push('/product/addupdate')}><Icon type=\"plus\" />添加商品</Button>;\r\n    return (\r\n      <Card title={title} extra={extra} className=\"product-home\">\r\n        <Table bordered columns={columns} dataSource={products} rowKey='_id'   pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","E:\\Codingdata\\React\\project\\react-admin-client\\src\\utils\\constants.js",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\rich-text-editor.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\product\\pictures-wall.jsx",[],["151","152"],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\role\\add-form.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\role\\auth-form.jsx",[],"E:\\Codingdata\\React\\project\\react-admin-client\\src\\pages\\user\\user-form.jsx",["153"],"import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass UserForm extends PureComponent {\r\n  componentWillMount() {\r\n      this.props.setForm(this.props.form)\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { roles, user } = this.props;\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    };\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label=\"用户名\">\r\n          {getFieldDecorator(\"username\", {\r\n            initialValue: user.username,\r\n          })(<Input placeholder=\"请输入用户名\" />)}\r\n        </Item>\r\n\r\n        {user._id ? null : (\r\n          <Item label=\"密码\">\r\n            {getFieldDecorator(\"password\", {\r\n              initialValue: user.password,\r\n            })(<Input type=\"password\" placeholder=\"请输入密码\" />)}\r\n          </Item>\r\n        )}\r\n\r\n        <Item label=\"手机号\">\r\n          {getFieldDecorator(\"phone\", {\r\n            initialValue: user.phone,\r\n          })(<Input placeholder=\"请输入手机号\" />)}\r\n        </Item>\r\n        <Item label=\"邮箱\">\r\n          {getFieldDecorator(\"email\", {\r\n            initialValue: user.email,\r\n          })(<Input placeholder=\"请输入邮箱\" />)}\r\n        </Item>\r\n\r\n        <Item label=\"角色\">\r\n          {getFieldDecorator(\"role_id\", {\r\n            initialValue: user.role_id,\r\n          })(\r\n            <Select>\r\n              {roles.map((role) => (\r\n                <Option key={role._id} value={role._id}>\r\n                  {role.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm);\r\n",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":1,"column":1,"nodeType":"160","endLine":3,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":5,"column":1,"nodeType":"160","endLine":17,"endColumn":2},{"ruleId":"161","severity":1,"message":"162","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"165","line":2,"column":16,"nodeType":"163","messageId":"164","endLine":2,"endColumn":20},{"ruleId":"161","severity":1,"message":"166","line":169,"column":37,"nodeType":"163","messageId":"164","endLine":169,"endColumn":41},{"ruleId":"161","severity":1,"message":"167","line":169,"column":43,"nodeType":"163","messageId":"164","endLine":169,"endColumn":49},{"ruleId":"161","severity":1,"message":"168","line":4,"column":9,"nodeType":"163","messageId":"164","endLine":4,"endColumn":21},{"ruleId":"154","replacedBy":"169"},{"ruleId":"156","replacedBy":"170"},{"ruleId":"161","severity":1,"message":"171","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":17},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'reqCategory' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'imgs' is assigned a value but never used.","'detail' is assigned a value but never used.","'BASE_IMG_URL' is defined but never used.",["172"],["173"],"'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]